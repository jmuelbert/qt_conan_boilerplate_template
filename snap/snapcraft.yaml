---
name: qtwidgettest
adopt-info: qtwidgettest
icon: assets/icons/icons8-app-symbol-80.png

base: core20
grade: devel
confinement: strict
compression: lzo

architectures:
  - build-on: amd64
    run-on: amd64

summary: A test.
description: qt_canon_boilerplate is a test app.

version: '0.0.2'

apps:
  qtwidgettest:
    common-id: com.github.jmuelbert.qt_canon_boilerplate
    command: usr/bin/qtwidgettest
    # command-chain:
    #   - snap/command-chain/add-qt-shortcuts
    extensions:
      - kde-neon
    plugs:
      - home
      - desktop
      - desktop-legacy
      - wayland
      - x11
    environment:
      QT_QPA_PLATFORMTHEME: gtk3

parts:
  extra-cmake-modules:
    source: https://github.com/KDE/extra-cmake-modules.git
    source-depth: 1
    source-tag: v5.93.0
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DBUILD_TESTING=OFF
    prime: [-./*]
  qtwidgettest:
    after:
      - extra-cmake-modules
    source: .
    source-type: git
    plugin: cmake
    cmake-parameters::
      - '-DCMAKE_INSTALL_PREFIX=/usr'
      - '-DCMAKE_BUILD_TYPE=Release'
      - '-DENABLE_TESTING=OFF'
      - '-DBUILD_TESTING=OFF'
      - '-DENABLE_CONAN=OFF'
    build-snaps:
      - kde-frameworks-5-qt-5-15-core20
    build-packages:
      - python
      - catch
      - libmpfr-dev
      - libfmt-dev
      - libspdlog-dev
      - libgmp-dev
      - kdoctools-dev
    parse-info:
      - usr/share/metainfo/qtwidgettest.appdata.xml

  runtime:
    plugin: nil
    stage-packages:
      - zlib1g
    prime:
      - '-usr/lib/x86_64-linux-gnu/libQt5*'
      - '-usr/lib/x86_64-linux-gnu/libqt5*'

  launcher:
    source: scripts
    plugin: dump
    organize:
      add-qt-shortcuts: snap/command-chain/add-qt-shortcuts
    stage-packages:
      - xdg-user-dirs

  # qtctl:
  #   source: https://github.com/snapcrafters/qtctl.git
  #   plugin: cmake
  #   build-snaps: [kde-frameworks-5-qt-5-15-core20-sdk]

  # This part removes all the files in this snap which already exist in
  # connected content and base snaps. Since these files will be available
  # at runtime from the content and base snaps, they do not need to be
  # included in this snap itself.
  #
  # More info: https://snapcraft-utils-library.readthedocs.io/en/latest/lib/cleanup.html
  #
  cleanup:
    after: # Make this part run last; list all your other parts here
      - qtwidgettest
      - runtime
    plugin: nil
    build-snaps: # List all content-snaps and base snaps you're using here
      - core20
      - kde-frameworks-5-qt-5-15-core20
    # override-prime: |
    #   set -eux
    #   for snap in "core20" "kde-frameworks-5-qt-5-15-core20"; do  # List all content-snaps and base snaps you're using here
    #     cd "/snap/$snap/current" && find . -type f,l -exec rm -f "$SNAPCRAFT_PRIME/{}" \;
    #   done
plugs:
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
