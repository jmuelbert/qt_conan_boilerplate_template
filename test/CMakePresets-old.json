{
    "version": 5,
    "cmakeMinimumRequired": {
        "major": 3,
        "minor": 24,
        "patch": 0
    },
    "configurePresets": [
        {
            "name": "cmake-pedantic",
            "hidden": true,
            "warnings": {
                "dev": true,
                "deprecated": true,
                "uninitialized": false,
                "unusedCli": true,
                "systemVars": false
            },
            "errors": {
                "dev": true,
                "deprecated": true
            }
        },
        {
            "name": "dev-mode",
            "hidden": true,
            "inherits": "cmake-pedantic",
            "cacheVariables": {
                "DEVELOPER_MODE": "ON"
            }
        },
        {
            "name": "conan",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_POLICY_DEFAULT_CMP0091": "NEW",
                "ENABLE_CONAN": "TRUE"
            }
        },
        {
            "name": "cppcheck",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_CPPCHECK": "cppcheck;--inline-suppr"
            }
        },
        {
            "name": "clang-tidy",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_CLANG_TIDY": "clang-tidy;--header-filter=^${sourceDir}/"
            }
        },
        {
            "name": "ci-std",
            "description": "This preset makes sure the project actually builds with at least the specified standard",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_EXTENSIONS": "OFF",
                "CMAKE_CXX_STANDARD": "20",
                "CMAKE_CXX_STANDARD_REQUIRED": "ON"
            }
        },
        {
            "name": "flags-unix",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_FLAGS": "-Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wformat=2 -Wundef -Werror=float-equal -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wimplicit-fallthrough -Wextra-semi -Woverloaded-virtual -Wnon-virtual-dtor -Wold-style-cast"
            }
        },
        {
            "name": "ci-unix",
            "generator": "Unix Makefiles",
            "hidden": true,
            "inherits": ["flags-unix", "ci-std"],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release"
            }
        },
        {
            "name": "ci-osx",
            "generator": "Ninja",
            "hidden": true,
            "inherits": ["flags-unix", "ci-std"],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release"
            }
        },
        {
            "name": "ci-win64",
            "inherits": ["flags-windows", "ci-std"],
            "generator": "Visual Studio 17 2022",
            "architecture": "x64",
            "hidden": true
        },
        {
            "name": "coverage-unix",
            "binaryDir": "${sourceDir}/build/coverage",
            "inherits": "ci-unix",
            "hidden": true,
            "cacheVariables": {
                "ENABLE_COVERAGE": "ON",
                "CMAKE_BUILD_TYPE": "Coverage",
                "CMAKE_CXX_FLAGS_COVERAGE": "-Og -g --coverage -fkeep-inline-functions -fkeep-static-functions",
                "CMAKE_EXE_LINKER_FLAGS_COVERAGE": "--coverage",
                "CMAKE_SHARED_LINKER_FLAGS_COVERAGE": "--coverage",
                "CMAKE_MAP_IMPORTED_CONFIG_COVERAGE": "Coverage;RelWithDebInfo;Release;Debug;"
            }
        },
        {
            "name": "ci-coverage",
            "inherits": ["coverage-unix", "dev-mode", "conan"],
            "cacheVariables": {
                "COVERAGE_HTML_COMMAND": ""
            }
        },
        {
            "name": "ci-sanitize",
            "binaryDir": "${sourceDir}/build/sanitize",
            "inherits": ["ci-unix", "dev-mode", "conan"],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Sanitize",
                "CMAKE_CXX_FLAGS_SANITIZE": "-O2 -g -fsanitize=address,undefined -fno-omit-frame-pointer -fno-common",
                "CMAKE_MAP_IMPORTED_CONFIG_SANITIZE": "Sanitize;RelWithDebInfo;Release;Debug;"
            }
        },
        {
            "name": "ci-build",
            "binaryDir": "${sourceDir}/build",
            "hidden": true
        },
        {
            "name": "ci-macos",
            "inherits": ["ci-build", "ci-osx", "dev-mode", "conan"]
        },
        {
            "name": "ci-ubuntu",
            "inherits": ["ci-build", "ci-unix", "clang-tidy", "conan", "cppcheck", "dev-mode"]
        },
        {
            "name": "ci-windows",
            "inherits": ["ci-build", "ci-win64", "dev-mode", "conan"]
        }
    ]
}
